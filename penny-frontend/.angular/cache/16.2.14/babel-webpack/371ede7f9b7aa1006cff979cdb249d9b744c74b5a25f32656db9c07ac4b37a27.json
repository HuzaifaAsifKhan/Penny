{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"./user.service\";\nexport class AuthGuard {\n  constructor(router, userService) {\n    this.router = router;\n    this.userService = userService;\n  }\n  canActivate(route, state) {\n    this.userService.isAuthenticated.subscribe(isAuth => {\n      if (isAuth) {\n        return true;\n      }\n      this.router.navigateByUrl('/auth/login');\n      return false;\n    });\n  }\n  static #_ = this.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.UserService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac\n  });\n}","map":{"version":3,"names":["AuthGuard","constructor","router","userService","canActivate","route","state","isAuthenticated","subscribe","isAuth","navigateByUrl","_","i0","ɵɵinject","i1","Router","i2","UserService","_2","factory","ɵfac"],"sources":["C:\\Huzaifa\\Penny\\penny-frontend\\src\\app\\core\\services\\auth-guard.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { UserService } from './user.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router: Router, private userService: UserService) {}\r\n\r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot\r\n  ): Observable<boolean> | any {\r\n    this.userService.isAuthenticated.subscribe((isAuth) => {\r\n      if (isAuth) {\r\n        return true;\r\n      }\r\n      this.router.navigateByUrl('/auth/login');\r\n      return false;\r\n    });\r\n  }\r\n}\r\n"],"mappings":";;;AAYA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,MAAc,EAAUC,WAAwB;IAAhD,KAAAD,MAAM,GAANA,MAAM;IAAkB,KAAAC,WAAW,GAAXA,WAAW;EAAgB;EAEvEC,WAAWA,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,IAAI,CAACH,WAAW,CAACI,eAAe,CAACC,SAAS,CAAEC,MAAM,IAAI;MACpD,IAAIA,MAAM,EAAE;QACV,OAAO,IAAI;;MAEb,IAAI,CAACP,MAAM,CAACQ,aAAa,CAAC,aAAa,CAAC;MACxC,OAAO,KAAK;IACd,CAAC,CAAC;EACJ;EAAC,QAAAC,CAAA,G;qBAdUX,SAAS,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,QAAA,CAAAG,EAAA,CAAAC,WAAA;EAAA;EAAA,QAAAC,EAAA,G;WAATlB,SAAS;IAAAmB,OAAA,EAATnB,SAAS,CAAAoB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}