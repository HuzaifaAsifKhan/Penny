{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/core/services\";\nexport class ProductService {\n  constructor(apiService) {\n    this.apiService = apiService;\n    this.getPosts = () => {\n      return this.apiService.get(`${environment.api_url}/product`);\n      // .pipe(\n      //   map((data) => {\n      //     const posts: IProduct[] = [];\n      //     for (let key in data) {\n      //       posts.push({ ...data[key] });\n      //     }\n      //     return posts;\n      //   })\n      // );\n    };\n\n    this.addProduct = product => {\n      return this.apiService.post(`${environment.api_url}/product`, product);\n    };\n    this.deleteProduct = id => {\n      return this.apiService.delete(`${environment.api_url}/product/${id}`);\n    };\n  }\n  static #_ = this.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.ApiService));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac\n  });\n}","map":{"version":3,"names":["environment","ProductService","constructor","apiService","getPosts","get","api_url","addProduct","product","post","deleteProduct","id","delete","_","i0","ɵɵinject","i1","ApiService","_2","factory","ɵfac"],"sources":["C:\\Huzaifa\\Penny\\penny-frontend\\src\\app\\product\\services\\product.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { Observable, map } from 'rxjs';\nimport { IProduct } from '../store/product.state';\nimport { ApiService } from 'src/app/core/services';\n\n@Injectable()\nexport class ProductService {\n  constructor(private apiService: ApiService) {}\n\n  getPosts = (): Observable<IProduct[]> => {\n    return this.apiService.get(`${environment.api_url}/product`);\n    // .pipe(\n    //   map((data) => {\n    //     const posts: IProduct[] = [];\n    //     for (let key in data) {\n    //       posts.push({ ...data[key] });\n    //     }\n    //     return posts;\n    //   })\n    // );\n  };\n\n  addProduct = (product: IProduct): Observable<any> => {\n    return this.apiService.post(`${environment.api_url}/product`, product);\n  };\n\n  deleteProduct = (id: string): Observable<any> => {\n    return this.apiService.delete(`${environment.api_url}/product/${id}`);\n  };\n}\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAM1D,OAAM,MAAOC,cAAc;EACzBC,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAE9B,KAAAC,QAAQ,GAAG,MAA6B;MACtC,OAAO,IAAI,CAACD,UAAU,CAACE,GAAG,CAAC,GAAGL,WAAW,CAACM,OAAO,UAAU,CAAC;MAC5D;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;IACF,CAAC;;IAED,KAAAC,UAAU,GAAIC,OAAiB,IAAqB;MAClD,OAAO,IAAI,CAACL,UAAU,CAACM,IAAI,CAAC,GAAGT,WAAW,CAACM,OAAO,UAAU,EAAEE,OAAO,CAAC;IACxE,CAAC;IAED,KAAAE,aAAa,GAAIC,EAAU,IAAqB;MAC9C,OAAO,IAAI,CAACR,UAAU,CAACS,MAAM,CAAC,GAAGZ,WAAW,CAACM,OAAO,YAAYK,EAAE,EAAE,CAAC;IACvE,CAAC;EArB4C;EAAC,QAAAE,CAAA,G;qBADnCZ,cAAc,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdjB,cAAc;IAAAkB,OAAA,EAAdlB,cAAc,CAAAmB;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}