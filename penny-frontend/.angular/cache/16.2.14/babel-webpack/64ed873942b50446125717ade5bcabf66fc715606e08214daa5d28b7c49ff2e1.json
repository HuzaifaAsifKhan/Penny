{"ast":null,"code":"export class CustomSerializer {\n  serialize(routerState) {\n    let route = routerState.root;\n    while (route.firstChild) {\n      route = route.firstChild;\n    }\n    const {\n      url,\n      root: {\n        queryParams\n      }\n    } = routerState;\n    const {\n      params\n    } = route;\n    // Only return an object including the URL, params and query params\n    // instead of the entire snapshot\n    return {\n      url,\n      params,\n      queryParams\n    };\n  }\n}","map":{"version":3,"names":["CustomSerializer","serialize","routerState","route","root","firstChild","url","queryParams","params"],"sources":["C:\\Huzaifa\\Penny\\penny-frontend\\src\\app\\store\\router\\custom-route-serializer.ts"],"sourcesContent":["import { Params, RouterStateSnapshot } from '@angular/router';\r\nimport { RouterStateSerializer } from '@ngrx/router-store';\r\nexport interface RouterStateUrl {\r\n  url: string;\r\n  params: Params;\r\n  queryParams: Params;\r\n}\r\n\r\nexport class CustomSerializer implements RouterStateSerializer<RouterStateUrl> {\r\n  serialize(routerState: RouterStateSnapshot): RouterStateUrl {\r\n    let route = routerState.root;\r\n\r\n    while (route.firstChild) {\r\n      route = route.firstChild;\r\n    }\r\n\r\n    const {\r\n      url,\r\n      root: { queryParams },\r\n    } = routerState;\r\n    const { params } = route;\r\n\r\n    // Only return an object including the URL, params and query params\r\n    // instead of the entire snapshot\r\n    return { url, params, queryParams };\r\n  }\r\n}\r\n"],"mappings":"AAQA,OAAM,MAAOA,gBAAgB;EAC3BC,SAASA,CAACC,WAAgC;IACxC,IAAIC,KAAK,GAAGD,WAAW,CAACE,IAAI;IAE5B,OAAOD,KAAK,CAACE,UAAU,EAAE;MACvBF,KAAK,GAAGA,KAAK,CAACE,UAAU;;IAG1B,MAAM;MACJC,GAAG;MACHF,IAAI,EAAE;QAAEG;MAAW;IAAE,CACtB,GAAGL,WAAW;IACf,MAAM;MAAEM;IAAM,CAAE,GAAGL,KAAK;IAExB;IACA;IACA,OAAO;MAAEG,GAAG;MAAEE,MAAM;MAAED;IAAW,CAAE;EACrC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}